<?php

// Language updates
$IMPORT['2step'] = 'Two Factor Authentication';
$IMPORT['a_2step'] = 'Admin Two Factor Authentication';
$IMPORT['2step_none'] = 'None';
$IMPORT['2step_email'] = 'Email';
$IMPORT['2step_email_confirm'] = 'Please confirm your login by clicking the link we have sent to your Email.';
$IMPORT['2step_email_subject'] = 'Confirm your login';
$IMPORT['2step_email_warning'] = 'An attempt to login to your account has been made. If you did not authorize that request, it\'s advisable to change your password as soon as possible.';
$IMPORT['a_2step_email_warning'] = 'An attempt to login to the admin area has been made. If you did not authorize that request, it\'s advisable to change your password as soon as possible.';
$IMPORT['2step_email_msg'] = 'In order to confirm your login, please click the following link';
$IMPORT['2step_email_msg_ip'] = 'Login IP';
$IMPORT['2step_email_msg_link'] = 'Confirmation Link';
$IMPORT['2step_google'] = 'Google Authenticator';
$IMPORT['2step_google_info'] = 'Use the following secret code in your app settings or simply scan the QR code to setup your app. If you already have, this is just for reference.';
$IMPORT['2step_google_validate'] = 'If you want to test your app, enter a code generated by your app. If saving this page is a success your code works properly.';
$IMPORT['2step_google_label'] = '6 digit verification code';
$IMPORT['2step_google_invalid'] = 'The code you entered is invalid';
$IMPORT['2step_google_confirm'] = 'Confirm';
$IMPORT['a_s_clean_urls'] = 'Enable Clean URLs? (mod_rewrite required)';
$IMPORT['remember_me'] = 'Remember me?';
$IMPORT['a_man_jf_int'] = 'Number only ( excluding dot and comma )';
$IMPORT['validate_int'] = 'Only numbers allowed ( excluding dot and comma )';
$IMPORT['ffmpeg_header'] = 'Convert Members Banners';
$IMPORT['ffmpeg_sub_header'] = 'This system will convert user banners from gif into mp4 for reduced filesize. You dont need to run this regulary, in fact only once after you installed the software or had it on hold for an extended period of time, because user banner upload has this system integrated.';
$IMPORT['ffmpeg_docs'] = 'For more details see the';
$IMPORT['ffmpeg_shell_exex_disabled'] = 'Warning - Function "shell_exec" need to be enabled.';
$IMPORT['ffmpeg_not_installed'] = 'Warning - Server lib "ffmpeg" need to installed or properly configured.';
$IMPORT['ffmpeg_convert_start'] = 'Convert';
$IMPORT['ffmpeg_checking'] = 'Checking users';
$IMPORT['ffmpeg_converting'] = 'Converting gif banners to mp4';
$IMPORT['ffmpeg_convert_success'] = 'Converted';
$IMPORT['ffmpeg_convert_fail'] = 'Failed - Image not found';

$DB->query("UPDATE {$CONF['sql_prefix']}_langs SET definition = 'Number only ( included dot and comma )' WHERE phrase_name = 'a_man_jf_number' AND language = 'english'", __FILE__, __LINE__);
$DB->query("UPDATE {$CONF['sql_prefix']}_langs SET definition = 'Only numbers allowed ( including dot and comma )' WHERE phrase_name = 'validate_number' AND language = 'english'", __FILE__, __LINE__);


// Fix issues with default values for database strict mode
$DB->query("ALTER TABLE {$CONF['sql_prefix']}_sites CHANGE `join_date` `join_date` DATETIME NOT NULL", __FILE__, __LINE__);
$DB->query("ALTER TABLE {$CONF['sql_prefix']}_sites CHANGE `date_start_premium` `date_start_premium` DATE NULL DEFAULT NULL", __FILE__, __LINE__);
$DB->query("ALTER TABLE {$CONF['sql_prefix']}_menu CHANGE `target` `target` varchar(80) NULL DEFAULT NULL", __FILE__, __LINE__);
$DB->query("ALTER TABLE {$CONF['sql_prefix']}_reviews CHANGE `date` `date` DATETIME NOT NULL", __FILE__, __LINE__);

// Let premium values hold a bigger number
$DB->query("ALTER TABLE `{$CONF['sql_prefix']}_sites` CHANGE `weeks_buy` `weeks_buy` INT UNSIGNED NULL DEFAULT '0', CHANGE `total_day` `total_day` INT UNSIGNED NULL DEFAULT '0', CHANGE `remain_day` `remain_day` INT UNSIGNED NULL DEFAULT '0'", __FILE__, __LINE__);

// Let session type hold more text
$DB->query("ALTER TABLE `{$CONF['sql_prefix']}_sessions` CHANGE `type` `type` VARCHAR(255) NOT NULL DEFAULT ''", __FILE__, __LINE__);

// Remember me login
$DB->query("ALTER TABLE `{$CONF['sql_prefix']}_sessions` ADD `keep_alive` tinyint(1) unsigned NOT NULL DEFAULT 0", __FILE__, __LINE__);

// banner width/height
// gif to mp4
// 2Step security
$DB->query("ALTER TABLE {$CONF['sql_prefix']}_sites
			ADD `banner_width` INT(10) UNSIGNED NOT NULL DEFAULT 0 AFTER `banner_url`,
			ADD `banner_height` INT(10) UNSIGNED NOT NULL DEFAULT 0 AFTER `banner_width`,
			ADD `premium_banner_width` INT(10) UNSIGNED NOT NULL DEFAULT 0 AFTER `premium_banner_url`,
			ADD `premium_banner_height` INT(10) UNSIGNED NOT NULL DEFAULT 0 AFTER `premium_banner_width`,
			ADD `mp4_url` VARCHAR(255) NULL AFTER `banner_height`,
			ADD `premium_mp4_url` VARCHAR(255) NULL AFTER `premium_banner_height`,
			ADD `2step` tinyint(1) unsigned NOT NULL DEFAULT 0,
			ADD `2step_secret` varchar(255) NOT NULL DEFAULT ''
", __FILE__, __LINE__);

$DB->query("ALTER TABLE {$CONF['sql_prefix']}_settings
			ADD `2step` tinyint(1) unsigned NOT NULL DEFAULT 0,
			ADD `2step_secret` varchar(255) NOT NULL DEFAULT ''
", __FILE__, __LINE__);

// Indexes
$DB->query("ALTER TABLE {$CONF['sql_prefix']}_stats
			ADD INDEX `rank_in_daily` (`unq_in_0_daily`, `unq_in_overall`),
			ADD INDEX `rank_in_weekly` (`unq_in_0_weekly`, `unq_in_overall`),
			ADD INDEX `rank_in_monthly` (`unq_in_0_monthly`, `unq_in_overall`),
			ADD INDEX `rank_out_daily` (`unq_out_0_daily`, `unq_out_overall`),
			ADD INDEX `rank_out_weekly` (`unq_out_0_weekly`, `unq_out_overall`),
			ADD INDEX `rank_out_monthly` (`unq_out_0_monthly`, `unq_out_overall`),
			ADD INDEX `rank_pv_daily` (`unq_pv_0_daily`, `unq_pv_overall`),
			ADD INDEX `rank_pv_weekly` (`unq_pv_0_weekly`, `unq_pv_overall`),
			ADD INDEX `rank_pv_monthly` (`unq_pv_0_monthly`, `unq_pv_overall`)
", __FILE__, __LINE__);

$DB->query("ALTER TABLE {$CONF['sql_prefix']}_sites
	ADD INDEX `rank_join_date` (`join_date`),
	ADD INDEX `date_start_premium` (`date_start_premium`)
", __FILE__, __LINE__);

// Clean url to core
$clean_urls_installed = $DB->query("SHOW COLUMNS FROM {$CONF['sql_prefix']}_settings LIKE 'clean_url'", __FILE__, __LINE__);

if(!$DB->num_rows($clean_urls_installed)) {

	$DB->query("ALTER TABLE `{$CONF['sql_prefix']}_settings` ADD `clean_url` TINYINT(1) NOT NULL DEFAULT 0", __FILE__, __LINE__);
}

// Make mp4 folder in banners
if (is_dir("{$CONF['path']}/banners"))
{
	if (!is_writable("{$CONF['path']}/banners"))
	{
		chmod("{$CONF['path']}/banners", 0777);
	}
	if (!is_dir("{$CONF['path']}/banners/mp4"))
	{
		mkdir("{$CONF['path']}/banners/mp4", 0777);
	}
}

// Load in button config and set width/height for default banner, optionally mp4 default banner
require_once("{$CONF['path']}/button_config.php");

$file = "{$CONF['path']}/button_config.php";
if ($fh = @fopen($file, 'w'))
{
	$default_banner_width  = 0;
	$default_banner_height = 0;
	$default_banner_mp4    = '';

	if (!empty($CONF['default_banner']))
	{
		// Hosted on list url or external sourse
		if (stripos($CONF['default_banner'], $CONF['list_url']) === 0)
		{
			$default_banner_path = str_replace($CONF['list_url'], $CONF['path'], $CONF['default_banner']);
			$default_banner_size = getimagesize($default_banner_path);

			if (!empty($default_banner_size))
			{
				$default_banner_width  = (int)$default_banner_size[0];
				$default_banner_height = (int)$default_banner_size[1];

				// gif to mp4 conversion using ffmpeg for smaller filesizes
				if (function_exists('shell_exec'))
				{
					$default_banner_extension = getExtension($CONF['default_banner']);
					$default_banner_extension = strtolower($default_banner_extension);

					// Force a file path search using "type".
					// "which" may be empty if you not modified $PATH
					// Returns filepath for ffmpeg, just some safecheck since ffmpeg alone may not always work on every system
					$ffmpeg_path = trim(shell_exec('type -P ffmpeg'));

					if (!empty($ffmpeg_path))
					{
						// We can convert gif. Png aint possible due transparency, jpg possible but many color jpg's get blurry due mp4 max 258 colors or so
						if ($default_banner_extension == 'gif')
						{
							// Remove list url + slash
							$ffmpeg_image_path = str_replace("{$CONF['list_url']}/", '', $CONF['default_banner']);

							// Get the filename without extension
							$ffmpeg_image = basename($ffmpeg_image_path, ".{$default_banner_extension}");

							// Remove slash + file from path
							$ffmpeg_image_path = str_replace("/{$ffmpeg_image}.{$default_banner_extension}", '', $ffmpeg_image_path);

							// mp4 url
							$default_banner_mp4 = "{$CONF['list_url']}/{$ffmpeg_image_path}/{$ffmpeg_image}.mp4";

							// actual convert command
							// (-y)                                      - Disable confirm promts when overwriting files
							// (-movflags faststart)                     - Make video playable and load quicker under html5
							// (-pix_fmt yuv420p)                        - Set pixel format. H.264 video is safe across browsers. If not available -pix_fmt auto picks best value for encoder in use
							// (-vf 'scale=trunc(iw/2)*2:trunc(ih/2)*2') - MP4 videos using H.264 need to have a dimensions that is divisible by 2. This option ensures that's the case for the filtergraph frame conversion
							// (</dev/null >/dev/null 2>&1)              - Redirect stdin/stdout/stderr into nothingness and make it a background process
							shell_exec("{$ffmpeg_path} -y -i \"{$CONF['path']}/{$ffmpeg_image_path}/{$ffmpeg_image}.{$default_banner_extension}\" -movflags faststart -pix_fmt yuv420p -preset veryslow -vf 'scale=trunc(iw/2)*2:trunc(ih/2)*2' \"{$CONF['path']}/{$ffmpeg_image_path}/{$ffmpeg_image}.mp4\" </dev/null >/dev/null 2>&1");
						}
					}
				}
			}
		}
		elseif (ini_get('allow_url_fopen'))
		{
			$default_banner_size = @getimagesize($CONF['default_banner']);

			if (!empty($default_banner_size))
			{
				$default_banner_width  = (int)$default_banner_size[0];
				$default_banner_height = (int)$default_banner_size[1];
			}
		}
	}

	$button_config = <<<EndHTML
<?php

\$CONF['count_pv'] = {$CONF['count_pv']}; //Count pageviews

\$CONF['text_link_button_alt'] = '{$CONF['text_link_button_alt']}'; // Text Link Anchor, Alt for Buttons
\$CONF['text_link'] = {$CONF['text_link']}; //Enable Text Link
\$CONF['static_button'] = {$CONF['static_button']}; // Show Only Static Button
\$CONF['static_button_url'] = '{$CONF['static_button_url']}';

\$CONF['rank_button'] = {$CONF['rank_button']}; //Show buttons with rank 1.gif, 2.gif etc
\$CONF['default_rank_button'] = '{$CONF['default_rank_button']}';
\$CONF['button_dir'] = '{$CONF['button_dir']}';
\$CONF['button_ext'] = '{$CONF['button_ext']}';
\$CONF['button_num'] = {$CONF['button_num']};

\$CONF['stats_button'] = {$CONF['stats_button']}; //Show Dynamic Stats Button

\$CONF['hidden_button_url'] = '{$CONF['list_url']}/images/clear.png';

\$CONF['default_banner_mp4'] = '{$default_banner_mp4}';
\$CONF['default_banner_width'] = {$default_banner_width};
\$CONF['default_banner_height'] = {$default_banner_height};

?>
EndHTML;

	fwrite($fh, $button_config);
	fclose($fh);
}